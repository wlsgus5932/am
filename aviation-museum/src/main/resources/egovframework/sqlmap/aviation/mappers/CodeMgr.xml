<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.aviation.preferences.service.impl.CodeMgrMapper">

  <select id="getOrgList" parameterType="egovframework.aviation.metadata.vo.OrgVO" resultType="egovframework.aviation.metadata.vo.OrgVO">

	            SELECT 
						*
	            FROM nam_org_code 
	            WHERE 1=1 
				<if test="org_code != null">AND
	                ORG_CODE = #{org_code}
	            </if>
	            ORDER BY SEQ
  </select>
  <select id="getPossessionList" parameterType="egovframework.aviation.metadata.vo.PosSessionVO" resultType="egovframework.aviation.metadata.vo.PosSessionVO">

	            SELECT 
						*
	            FROM nam_possession_code 
	            WHERE 1=1 
				AND ORG_CODE_IDX = #{org_code_idx}
				<if test="possession_code != null">AND
	                POSSESSION_CODE = #{possession_code}
	            </if>
	            ORDER BY SEQ
  </select>
  <select id="getIcaoList" parameterType="egovframework.aviation.metadata.vo.IcaoVO" resultType="egovframework.aviation.metadata.vo.IcaoVO">

	            SELECT 
						*
	            FROM nam_icao_code 
	            WHERE 1=1 
	            <if test="icao_code != null">AND
	                ICAO_CODE = #{icao_code}
	            </if>
	            ORDER BY SEQ
  </select>
  <select id="getClass1List" parameterType="egovframework.aviation.metadata.vo.Class1VO" resultType="egovframework.aviation.metadata.vo.Class1VO">

	            SELECT 
						*
	            FROM nam_class1_code 
	            WHERE 1=1 
	            <if test="class1_code != null">AND
	                CLASS1_CODE = #{class1_code}
	            </if>
	            ORDER BY SEQ
  </select>
  <select id="getClass2List" parameterType="egovframework.aviation.metadata.vo.Class2VO" resultType="egovframework.aviation.metadata.vo.Class2VO">

	            SELECT 
						*
	            FROM nam_class2_code 
	            WHERE 1=1 
	            <if test="class2_code != null">AND
	                CLASS2_CODE = #{class2_code}
	            </if>
	            ORDER BY SEQ
  </select>
  <select id="getClass3List" parameterType="egovframework.aviation.metadata.vo.Class3VO" resultType="egovframework.aviation.metadata.vo.Class3VO">

	            SELECT 
						*
	            FROM nam_class3_code 
	            WHERE 1=1 
	            <if test="class3_code != null">AND
	                CLASS3_CODE = #{class3_code}
	            </if>
	            ORDER BY SEQ
  </select>
  <select id="getCountryList" parameterType="egovframework.aviation.metadata.vo.CountryVO" resultType="egovframework.aviation.metadata.vo.CountryVO">

	            SELECT 
						*
	            FROM nam_country_code 
	            WHERE 1=1 
	            ORDER BY SEQ
  </select>
  
  <select id="getEraList" parameterType="egovframework.aviation.metadata.vo.CountryVO" resultType="egovframework.aviation.metadata.vo.EraVO">

	            SELECT 
						*
	            FROM nam_era_code 
	            WHERE 1=1 
				AND COUNTRY_CODE_IDX = #{country_code_idx}
				ORDER BY SEQ
  </select>
  
  <select id="getMaterial1List" parameterType="egovframework.aviation.metadata.vo.Material1VO" resultType="egovframework.aviation.metadata.vo.Material1VO">

	            SELECT 
						*
	            FROM nam_material1_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
 
  <select id="getMaterial2List" parameterType="egovframework.aviation.metadata.vo.Material1VO" resultType="egovframework.aviation.metadata.vo.Material2VO">

	            SELECT 
						*
	            FROM nam_material2_code 
	            WHERE 1=1 
				AND MATERIAL1_CODE_IDX = #{material1_code_idx}
				ORDER BY SEQ
  </select>

<!--  기본정보코드  -->
  <select id="getQtyUnitList" parameterType="egovframework.aviation.metadata.vo.QtyUnitVO" resultType="egovframework.aviation.metadata.vo.QtyUnitVO">

	            SELECT 
						*
	            FROM nam_qty_unit_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getExistenceList" parameterType="egovframework.aviation.metadata.vo.ExistenceVO" resultType="egovframework.aviation.metadata.vo.ExistenceVO">

	            SELECT 
						*
	            FROM nam_existence_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getMeasurementUnitList" parameterType="egovframework.aviation.metadata.vo.MeasurementUnitVO" resultType="egovframework.aviation.metadata.vo.MeasurementUnitVO">

	            SELECT 
						*
	            FROM nam_measurement_unit_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getMeasurementList" parameterType="egovframework.aviation.metadata.vo.MeasurementVO" resultType="egovframework.aviation.metadata.vo.MeasurementVO">

	            SELECT 
						*
	            FROM nam_measurement_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getConditionList" parameterType="egovframework.aviation.metadata.vo.ConditionVO" resultType="egovframework.aviation.metadata.vo.ConditionVO">

	            SELECT 
						*
	            FROM nam_condition_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getRankingList" parameterType="egovframework.aviation.metadata.vo.RankingVO" resultType="egovframework.aviation.metadata.vo.RankingVO">

	            SELECT 
						*
	            FROM nam_ranking_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getGgnuriList" parameterType="egovframework.aviation.metadata.vo.GgnuriVO" resultType="egovframework.aviation.metadata.vo.GgnuriVO">

	            SELECT 
						*
	            FROM nam_ggnuri_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getSpecialityList" parameterType="egovframework.aviation.preferences.vo.SpecialityVO" resultType="egovframework.aviation.preferences.vo.SpecialityVO">

	            SELECT 
						*
	            FROM nam_speciality_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
<!--  기본정보코드 end  -->
<!--  입수정보코드   -->
  <select id="getObtainmentList" parameterType="egovframework.aviation.metadata.vo.ObtainmentVO" resultType="egovframework.aviation.metadata.vo.ObtainmentVO">

	            SELECT 
						*
	            FROM nam_obtainment_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getPriceUnitList" parameterType="egovframework.aviation.metadata.vo.PriceUnitVO" resultType="egovframework.aviation.metadata.vo.PriceUnitVO">

	            SELECT 
						*
	            FROM nam_price_unit_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getPurchase1List" parameterType="egovframework.aviation.metadata.vo.Purchase1VO" resultType="egovframework.aviation.metadata.vo.Purchase1VO">

	            SELECT 
						*
	            FROM nam_purchase1_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getPurchase2List" parameterType="egovframework.aviation.metadata.vo.Purchase2VO" resultType="egovframework.aviation.metadata.vo.Purchase2VO">

	            SELECT 
						*
	            FROM nam_purchase2_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
<!--  입수정보코드 end   -->
<!--  보관구분코드   -->
  <select id="getStorageType1List" parameterType="egovframework.aviation.preferences.vo.StorageType1VO" resultType="egovframework.aviation.preferences.vo.StorageType1VO">

	            SELECT 
						*
	            FROM nam_storage_type1_code 
	            WHERE 1=1 
	            ORDER BY SEQ

  </select>
  <select id="getStorageType2List" parameterType="egovframework.aviation.preferences.vo.StorageType1VO" resultType="egovframework.aviation.preferences.vo.StorageType2VO">

	            SELECT 
						*
	            FROM nam_storage_type2_code 
	            WHERE 1=1 
				AND STORAGE_TYPE1_CODE_IDX = #{storage_type1_code_idx}
				ORDER BY SEQ
  </select>
<!--  보관구분코드 end   -->
<!--  보관처코드   -->
<!--   <select id="getStorageCodeList" parameterType="egovframework.aviation.preferences.vo.StorageCodeVO" resultType="egovframework.aviation.preferences.vo.StorageCodeVO"> -->
	          
<!-- 			 WITH RECURSIVE tmp1 AS -->
<!-- 			( -->
<!-- 			    SELECT  -->
<!-- 			    	  STORAGE_CODE_IDX -->
<!-- 			    	, STORAGE_NM -->
<!-- 			    	, PARENT_CODE -->
<!-- 			    	, STORAGE_NM AS path -->
<!-- 			    	, 1 AS lvl -->
<!-- 			    FROM nam_storage_code WHERE PARENT_CODE=0 -->
<!-- 			    UNION ALL -->
<!-- 			    SELECT  -->
<!-- 			    	  e.STORAGE_CODE_IDX -->
<!-- 			     	, e.STORAGE_NM -->
<!-- 			    	, e.PARENT_CODE -->
<!-- 			    	, CONCAT(t.path,',',e.STORAGE_NM) AS path -->
<!-- 			    	, t.lvl+1 AS lvl  -->
<!-- 			    FROM tmp1 t JOIN nam_storage_code e ON t.STORAGE_CODE_IDX=e.PARENT_CODE -->
<!-- 			) -->
<!-- 			SELECT  -->
<!-- 				STORAGE_CODE_IDX -->
<!-- 				, STORAGE_NM -->
<!-- 				, PARENT_CODE -->
<!-- 				, path -->
<!-- 				, lvl  -->
<!-- 			FROM tmp1  -->
<!-- 			ORDER BY path -->

<!--   </select> -->
  <select id="getStorageCodeList" parameterType="egovframework.aviation.preferences.vo.StorageCodeVO" resultType="egovframework.aviation.preferences.vo.StorageCodeVO">
	          
			SELECT
				 * 
			from nam_storage_code 
			WHERE 1=1
			<if test=" '' != search_word and null != search_word">
				<if test="search_type == 'storage_nm'">
					AND (storage_nm LIKE CONCAT('%', #{search_word}, '%'))
				</if>
			</if>
			order by PARENT_CODE, SEQ
  </select>
<!--  보관처코드 end   -->

<!--  보관처상세코드   -->
  <select id="getStorageCodeViewList" parameterType="egovframework.aviation.preferences.vo.StorageCodeVO" resultType="egovframework.aviation.preferences.vo.StorageCodeVO">
	          
			SELECT
				 * 
			from nam_storage_code 
			WHERE 1=1
			<if test="storage_code_idx != null">AND
                PARENT_CODE = (SELECT PARENT_CODE FROM nam_storage_code WHERE STORAGE_CODE_IDX =#{storage_code_idx})
            </if>
            <if test="parent_code != null">AND
				PARENT_CODE = #{parent_code}
			</if>
			order by SEQ
  </select>

<!--  보관처상세코드 end   -->
  <insert id="insertQtyUnit" parameterType="egovframework.aviation.metadata.vo.QtyUnitVO">
        
            INSERT INTO nam_qty_unit_code
                  ( QTY_UNIT_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{qty_unit_nm}
           	      , (select count(*) from nam_qty_unit_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
   </insert>
   
   <insert id="insertExistence" parameterType="egovframework.aviation.metadata.vo.ExistenceVO">
        
            INSERT INTO nam_existence_code
                  ( EXISTENCE_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{existence_nm}
           	      , (select count(*) from nam_existence_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertMeasurement" parameterType="egovframework.aviation.metadata.vo.MeasurementVO">
        
            INSERT INTO nam_measurement_code
                  ( MEASUREMENT_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{measurement_nm}
           	      , (select count(*) from nam_measurement_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertMeasurementUnit" parameterType="egovframework.aviation.metadata.vo.MeasurementUnitVO">
        
            INSERT INTO nam_measurement_unit_code
                  ( MEASUREMENT_UNIT_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{measurement_unit_nm}
           	      , (select count(*) from nam_measurement_unit_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertCondition" parameterType="egovframework.aviation.metadata.vo.ConditionVO">
        
            INSERT INTO nam_condition_code
                  ( CONDITION_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{condition_nm}
           	      , (select count(*) from nam_condition_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertRanking" parameterType="egovframework.aviation.metadata.vo.RankingVO">
        
            INSERT INTO nam_ranking_code
                  ( RANKING_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{ranking_nm}
           	      , (select count(*) from nam_ranking_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertGgnuri" parameterType="egovframework.aviation.metadata.vo.GgnuriVO">
        
            INSERT INTO nam_ggnuri_code
                  ( GGNURI_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{ggnuri_nm}
           	      , (select count(*) from nam_ggnuri_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertSpeciality" parameterType="egovframework.aviation.preferences.vo.SpecialityVO">
        
            INSERT INTO nam_speciality_code
                  ( SPECIALITY_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{speciality_nm}
           	      , (select count(*) from nam_speciality_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertObtainment" parameterType="egovframework.aviation.metadata.vo.ObtainmentVO">
        
            INSERT INTO nam_obtainment_code
                  ( OBTAINMENT_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{obtainment_nm}
           	      , (select count(*) from nam_obtainment_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertPriceUnit" parameterType="egovframework.aviation.metadata.vo.PriceUnitVO">
        
            INSERT INTO nam_price_unit_code
                  ( PRICE_UNIT_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{price_unit_nm}
           	      , (select count(*) from nam_price_unit_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertPurchase1" parameterType="egovframework.aviation.metadata.vo.Purchase1VO">
        
            INSERT INTO nam_purchase1_code
                  ( PURCHASE1_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{purchase1_nm}
           	      , (select count(*) from nam_purchase1_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
        
    <insert id="insertPurchase2" parameterType="egovframework.aviation.metadata.vo.Purchase2VO">
        
            INSERT INTO nam_purchase2_code
                  ( PURCHASE2_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{purchase2_nm}
           	      , (select count(*) from nam_purchase2_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertIcao" parameterType="egovframework.aviation.metadata.vo.IcaoVO">
        
            INSERT INTO nam_icao_code
                  ( ICAO_CODE
                  ,	ICAO_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{icao_code}
           		  ,	#{icao_nm}
           	      , (select count(*) from nam_icao_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertClass1" parameterType="egovframework.aviation.metadata.vo.Class1VO">
        
            INSERT INTO nam_class1_code
                  ( CLASS1_CODE
                  , CLASS1_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{class1_code}
           		  , #{class1_nm}
           	      , (select count(*) from nam_class1_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertClass2" parameterType="egovframework.aviation.metadata.vo.Class2VO">
        
            INSERT INTO nam_class2_code
                  (	CLASS2_CODE
                  , CLASS2_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{class2_code}
           		  , #{class2_nm}
           	      , (select count(*) from nam_class2_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
        
    <insert id="insertClass3" parameterType="egovframework.aviation.metadata.vo.Class3VO">
        
            INSERT INTO nam_class3_code
                  (	CLASS3_CODE
                  , CLASS3_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{class3_code}
           		  , #{class3_nm}
           	      , (select count(*) from nam_class3_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertOrg" parameterType="egovframework.aviation.metadata.vo.OrgVO">
        
            INSERT INTO nam_org_code
                  (	ORG_CODE
                  , ORG_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{org_code}
           		  , #{org_nm}
           	      , (select count(*) from nam_org_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertCountry" parameterType="egovframework.aviation.metadata.vo.CountryVO">
        
            INSERT INTO nam_country_code
                  (	COUNTRY_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{country_nm}
           	      , (select count(*) from nam_country_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertMaterial" parameterType="egovframework.aviation.metadata.vo.Material1VO">
        
            INSERT INTO nam_material1_code
                  (	MATERIAL1_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{material1_nm}
           	      , (select count(*) from nam_material1_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertStorageType1" parameterType="egovframework.aviation.preferences.vo.StorageType1VO">
        
            INSERT INTO nam_storage_type1_code
                  (	STORAGE_TYPE1_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES (#{storage_type1_nm}
           	      , (select count(*) from nam_storage_type1_code b)+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertPossession" parameterType="egovframework.aviation.metadata.vo.PosSessionVO">
        
            INSERT INTO nam_possession_code
                  (	ORG_CODE_IDX
                  , POSSESSION_CODE
                  , POSSESSION_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{org_code_idx}
          		  , #{possession_code}
           		  , #{possession_nm}
           	      , (select count(*) from nam_possession_code b WHERE b.ORG_CODE_IDX =#{org_code_idx})+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertEra" parameterType="egovframework.aviation.metadata.vo.EraVO">
        
            INSERT INTO nam_era_code
                  (	COUNTRY_CODE_IDX
                  , ERA_NM
                  , START_YEAR
                  , END_YEAR
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{country_code_idx}
           		  , #{era_nm}
           		  , #{start_year}
           		  , #{end_year}
           	      , (select count(*) from nam_era_code b WHERE b.COUNTRY_CODE_IDX =#{country_code_idx})+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    
    <insert id="insertMaterial2" parameterType="egovframework.aviation.metadata.vo.Material2VO">
        
            INSERT INTO nam_material2_code
                  (	MATERIAL1_CODE_IDX
                  , MATERIAL2_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{material1_code_idx}
           		  , #{material2_nm}
           	      , (select count(*) from nam_material2_code b WHERE b.MATERIAL1_CODE_IDX =#{material1_code_idx})+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <insert id="insertStorageType2" parameterType="egovframework.aviation.preferences.vo.StorageType2VO">
        
            INSERT INTO nam_storage_type2_code
                  (	STORAGE_TYPE1_CODE_IDX
                  , STORAGE_TYPE2_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( #{storage_type1_code_idx}
           		  , #{storage_type2_nm}
           	      , (select count(*) from nam_storage_type2_code b WHERE b.STORAGE_TYPE1_CODE_IDX =#{storage_type1_code_idx})+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
        
    <insert id="insertStorageCode" parameterType="egovframework.aviation.preferences.vo.StorageCodeVO">
        
            INSERT INTO nam_storage_code
                  (	
                    PARENT_CODE
                  , STORAGE_NM
                  , SEQ
                  , ENABLED
                  , REG_USER
                  , REG_DATE )
           VALUES ( 
           		    #{parent_code}
           		  , #{storage_nm}
           	      , (select count(*) from nam_storage_code b WHERE b.PARENT_CODE =#{parent_code})+1
                  , #{enabled}
                  , #{reg_user}
                  , now())
         
    </insert>
    
    <update id="updateOrg" parameterType="egovframework.aviation.metadata.vo.OrgVO">
        
            UPDATE nam_org_code 
               SET ORG_NM=#{org_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE ORG_CODE_IDX=#{org_code_idx}
  
    </update>
    
    <update id="updatePossession" parameterType="egovframework.aviation.metadata.vo.PosSessionVO">
        
            UPDATE nam_possession_code 
               SET POSSESSION_NM=#{possession_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE POSSESSION_CODE_IDX=#{possession_code_idx}
  
    </update>
    
    <update id="updateIcao" parameterType="egovframework.aviation.metadata.vo.IcaoVO">
        
            UPDATE nam_icao_code 
               SET ICAO_NM=#{icao_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE ICAO_CODE_IDX=#{icao_code_idx}
  
    </update>
    
    <update id="updateClass1" parameterType="egovframework.aviation.metadata.vo.Class1VO">
        
            UPDATE nam_class1_code 
               SET CLASS1_NM=#{class1_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE CLASS1_CODE_IDX=#{class1_code_idx}
  
    </update>
    
    <update id="updateClass2" parameterType="egovframework.aviation.metadata.vo.Class2VO">
        
            UPDATE nam_class2_code 
               SET CLASS2_NM=#{class2_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE CLASS2_CODE_IDX=#{class2_code_idx}
  
    </update>
    
    <update id="updateClass3" parameterType="egovframework.aviation.metadata.vo.Class3VO">
        
            UPDATE nam_class3_code 
               SET CLASS3_NM=#{class3_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE CLASS3_CODE_IDX=#{class3_code_idx}
  
    </update>
    
    <update id="updateCountry" parameterType="egovframework.aviation.metadata.vo.CountryVO">
        
            UPDATE nam_country_code 
               SET COUNTRY_NM=#{country_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE COUNTRY_CODE_IDX=#{country_code_idx}
  
    </update>
    
    <update id="updateEra" parameterType="egovframework.aviation.metadata.vo.EraVO">
        
            UPDATE nam_era_code 
               SET ERA_NM=#{era_nm}
              	 , START_YEAR=#{start_year}
               	 , END_YEAR=#{end_year}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE ERA_CODE_IDX=#{era_code_idx}
  
    </update>
    
    <update id="updateMaterial" parameterType="egovframework.aviation.metadata.vo.Material1VO">
        
            UPDATE nam_material1_code 
               SET MATERIAL1_NM=#{material1_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE MATERIAL1_CODE_IDX=#{material1_code_idx}
  
    </update>
    
    <update id="updateMaterial2" parameterType="egovframework.aviation.metadata.vo.Material2VO">
        
            UPDATE nam_material2_code 
               SET MATERIAL2_NM=#{material2_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE MATERIAL2_CODE_IDX=#{material2_code_idx}
  
    </update>
    
    <update id="updateQtyUnit" parameterType="egovframework.aviation.metadata.vo.QtyUnitVO">
        
            UPDATE nam_qty_unit_code 
               SET QTY_UNIT_NM=#{qty_unit_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE QTY_UNIT_CODE_IDX=#{qty_unit_code_idx}
  
    </update>
    
    <update id="updateExistence" parameterType="egovframework.aviation.metadata.vo.ExistenceVO">
        
            UPDATE nam_existence_code 
               SET EXISTENCE_NM=#{existence_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE EXISTENCE_CODE_IDX=#{existence_code_idx}
  
    </update>
    
    <update id="updateMeasurement" parameterType="egovframework.aviation.metadata.vo.MeasurementVO">
        
            UPDATE nam_measurement_code 
               SET MEASUREMENT_NM=#{measurement_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE MEASUREMENT_CODE_IDX=#{measurement_code_idx}
  
    </update>
    
    <update id="updateMeasurementUnit" parameterType="egovframework.aviation.metadata.vo.MeasurementUnitVO">
        
              UPDATE nam_measurement_unit_code 
               SET MEASUREMENT_UNIT_NM=#{measurement_unit_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE MEASUREMENT_UNIT_CODE_IDX=#{measurement_unit_code_idx}
  
    </update>
    
    <update id="updateCondition" parameterType="egovframework.aviation.metadata.vo.ConditionVO">
        
            UPDATE nam_condition_code 
               SET CONDITION_NM=#{condition_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE CONDITION_CODE_IDX=#{condition_code_idx}
  
    </update>
    
    <update id="updateRanking" parameterType="egovframework.aviation.metadata.vo.RankingVO">
        
            UPDATE nam_ranking_code 
               SET RANKING_NM=#{ranking_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE RANKING_CODE_IDX=#{ranking_code_idx}
  
    </update>
    
    <update id="updateGgnuri" parameterType="egovframework.aviation.metadata.vo.GgnuriVO">
        
            UPDATE nam_ggnuri_code 
               SET GGNURI_NM=#{ggnuri_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE GGNURI_CODE_IDX=#{ggnuri_code_idx}
  
    </update>
    
    <update id="updateSpeciality" parameterType="egovframework.aviation.preferences.vo.SpecialityVO">
        
            UPDATE nam_speciality_code 
               SET SPECIALITY_NM=#{speciality_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE SPECIALITY_CODE_IDX=#{speciality_code_idx}
  
    </update>
         
    <update id="updateObtainment" parameterType="egovframework.aviation.metadata.vo.ObtainmentVO">
        
            UPDATE nam_obtainment_code 
               SET OBTAINMENT_NM=#{obtainment_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE OBTAINMENT_CODE_IDX=#{obtainment_code_idx}
  
    </update>
    
    <update id="updatePriceUnit" parameterType="egovframework.aviation.metadata.vo.PriceUnitVO">
        
            UPDATE nam_price_unit_code 
               SET PRICE_UNIT_NM=#{price_unit_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE PRICE_UNIT_CODE_IDX=#{price_unit_code_idx}
  
    </update>
    
    <update id="updatePurchase1" parameterType="egovframework.aviation.metadata.vo.Purchase1VO">
        
            UPDATE nam_purchase1_code 
               SET PURCHASE1_NM=#{purchase1_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE PURCHASE1_CODE_IDX=#{purchase1_code_idx}
  
    </update>
    
    <update id="updatePurchase2" parameterType="egovframework.aviation.metadata.vo.Purchase2VO">     
        
            UPDATE nam_purchase2_code 
               SET PURCHASE2_NM=#{purchase2_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE PURCHASE2_CODE_IDX=#{purchase2_code_idx}
  
    </update>
    
    <update id="updateStorageType1" parameterType="egovframework.aviation.preferences.vo.StorageType1VO">
        
            UPDATE nam_storage_type1_code 
               SET STORAGE_TYPE1_NM=#{storage_type1_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE STORAGE_TYPE1_CODE_IDX=#{storage_type1_code_idx}
  
    </update>
    
    <update id="updateStorageType2" parameterType="egovframework.aviation.preferences.vo.StorageType2VO">
        
            UPDATE nam_storage_type2_code 
               SET STORAGE_TYPE2_NM=#{storage_type2_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE STORAGE_TYPE2_CODE_IDX=#{storage_type2_code_idx}
  
    </update>
    
    <update id="updateStorageCode" parameterType="egovframework.aviation.preferences.vo.StorageCodeVO">
        
            UPDATE nam_storage_code 
               SET STORAGE_NM=#{storage_nm}
                 , ENABLED=#{enabled}
                 , MOD_USER=#{mod_user}
                 , MOD_DATE=now()
             WHERE STORAGE_CODE_IDX=#{storage_code_idx}
  
    </update>
  
    <!--  순서 변경   -->
    <update id="updateOrgSeq" parameterType="egovframework.aviation.metadata.vo.OrgVO">

   		UPDATE nam_org_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case ORG_CODE_IDX WHEN #{org_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case ORG_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 ORG_CODE_IDX 
						,lag(ORG_CODE_IDX, 1) over (order by seq) as prev
					from nam_org_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE ORG_CODE_IDX = #{org_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case ORG_CODE_IDX WHEN #{org_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case ORG_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 ORG_CODE_IDX 
						,lead(ORG_CODE_IDX, 1) over (order by seq) as next
					from nam_org_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE ORG_CODE_IDX = #{org_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updatePossessionSeq" parameterType="egovframework.aviation.metadata.vo.PosSessionVO">

   		UPDATE nam_possession_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case POSSESSION_CODE_IDX WHEN #{possession_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case POSSESSION_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 POSSESSION_CODE_IDX 
						,lag(POSSESSION_CODE_IDX, 1) over (order by seq) as prev
						,ORG_CODE_IDX
					from nam_possession_code noc 
					where 1=1
					AND ORG_CODE_IDX = #{org_code_idx}
					ORDER by seq
				)R1 WHERE POSSESSION_CODE_IDX = #{possession_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case POSSESSION_CODE_IDX WHEN #{possession_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case POSSESSION_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 POSSESSION_CODE_IDX 
						,lead(POSSESSION_CODE_IDX, 1) over (order by seq) as next
						,ORG_CODE_IDX
					from nam_possession_code noc 
					where 1=1 
					AND ORG_CODE_IDX = #{org_code_idx}
					ORDER by seq
				)R1 WHERE POSSESSION_CODE_IDX = #{possession_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateIcaoSeq" parameterType="egovframework.aviation.metadata.vo.IcaoVO">
   		UPDATE nam_icao_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case ICAO_CODE_IDX WHEN #{icao_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case ICAO_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 ICAO_CODE_IDX 
						,lag(ICAO_CODE_IDX, 1) over (order by seq) as prev
					from nam_icao_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE ICAO_CODE_IDX = #{icao_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case ICAO_CODE_IDX WHEN #{icao_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case ICAO_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 ICAO_CODE_IDX 
						,lead(ICAO_CODE_IDX, 1) over (order by seq) as next
					from nam_icao_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE ICAO_CODE_IDX = #{icao_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateClass1Seq" parameterType="egovframework.aviation.metadata.vo.Class1VO">
   		UPDATE nam_class1_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case CLASS1_CODE_IDX WHEN #{class1_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case CLASS1_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 CLASS1_CODE_IDX 
						,lag(CLASS1_CODE_IDX, 1) over (order by seq) as prev
					from nam_class1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CLASS1_CODE_IDX = #{class1_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case CLASS1_CODE_IDX WHEN #{class1_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case CLASS1_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 CLASS1_CODE_IDX 
						,lead(CLASS1_CODE_IDX, 1) over (order by seq) as next
					from nam_class1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CLASS1_CODE_IDX = #{class1_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateClass2Seq" parameterType="egovframework.aviation.metadata.vo.Class2VO">
   		UPDATE nam_class2_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case CLASS2_CODE_IDX WHEN #{class2_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case CLASS2_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 CLASS2_CODE_IDX 
						,lag(CLASS2_CODE_IDX, 1) over (order by seq) as prev
					from nam_class2_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CLASS2_CODE_IDX = #{class2_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case CLASS2_CODE_IDX WHEN #{class2_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case CLASS2_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 CLASS2_CODE_IDX 
						,lead(CLASS2_CODE_IDX, 1) over (order by seq) as next
					from nam_class2_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CLASS2_CODE_IDX = #{class2_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
        
    <update id="updateClass3Seq" parameterType="egovframework.aviation.metadata.vo.Class3VO">
   		UPDATE nam_class3_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case CLASS3_CODE_IDX WHEN #{class3_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case CLASS3_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 CLASS3_CODE_IDX 
						,lag(CLASS3_CODE_IDX, 1) over (order by seq) as prev
					from nam_class3_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CLASS3_CODE_IDX = #{class3_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case CLASS3_CODE_IDX WHEN #{class3_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case CLASS3_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 CLASS3_CODE_IDX 
						,lead(CLASS3_CODE_IDX, 1) over (order by seq) as next
					from nam_class3_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CLASS3_CODE_IDX = #{class3_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
   
    <update id="updateCountrySeq" parameterType="egovframework.aviation.metadata.vo.CountryVO">

   		UPDATE nam_country_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case COUNTRY_CODE_IDX WHEN #{country_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case COUNTRY_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 COUNTRY_CODE_IDX 
						,lag(COUNTRY_CODE_IDX, 1) over (order by seq) as prev
					from nam_country_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE COUNTRY_CODE_IDX = #{country_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case COUNTRY_CODE_IDX WHEN #{country_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case COUNTRY_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 COUNTRY_CODE_IDX 
						,lead(COUNTRY_CODE_IDX, 1) over (order by seq) as next
					from nam_country_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE COUNTRY_CODE_IDX = #{country_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateEraSeq" parameterType="egovframework.aviation.metadata.vo.EraVO">

   		UPDATE nam_era_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case ERA_CODE_IDX WHEN #{era_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case ERA_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 ERA_CODE_IDX 
						,lag(ERA_CODE_IDX, 1) over (order by seq) as prev
						,COUNTRY_CODE_IDX
					from nam_era_code noc 
					where 1=1
					AND COUNTRY_CODE_IDX = #{country_code_idx}
					ORDER by seq
				)R1 WHERE ERA_CODE_IDX = #{era_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case ERA_CODE_IDX WHEN #{era_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case ERA_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 ERA_CODE_IDX 
						,lead(ERA_CODE_IDX, 1) over (order by seq) as next
						,COUNTRY_CODE_IDX
					from nam_era_code noc 
					where 1=1 
					AND COUNTRY_CODE_IDX = #{country_code_idx}
					ORDER by seq
				)R1 WHERE ERA_CODE_IDX = #{era_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateMaterialSeq" parameterType="egovframework.aviation.metadata.vo.Material1VO">

   		UPDATE nam_material1_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case MATERIAL1_CODE_IDX WHEN #{material1_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case MATERIAL1_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 MATERIAL1_CODE_IDX 
						,lag(MATERIAL1_CODE_IDX, 1) over (order by seq) as prev
					from nam_material1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE MATERIAL1_CODE_IDX = #{material1_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case MATERIAL1_CODE_IDX WHEN #{material1_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case MATERIAL1_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 MATERIAL1_CODE_IDX 
						,lead(MATERIAL1_CODE_IDX, 1) over (order by seq) as next
					from nam_material1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE MATERIAL1_CODE_IDX = #{material1_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateMaterial2Seq" parameterType="egovframework.aviation.metadata.vo.Material2VO">

   		UPDATE nam_material2_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case MATERIAL2_CODE_IDX WHEN #{material2_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case MATERIAL2_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 MATERIAL2_CODE_IDX 
						,lag(MATERIAL2_CODE_IDX, 1) over (order by seq) as prev
						,MATERIAL1_CODE_IDX
					from nam_material2_code noc 
					where 1=1
					AND MATERIAL1_CODE_IDX = #{material1_code_idx}
					ORDER by seq
				)R1 WHERE MATERIAL2_CODE_IDX = #{material2_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case MATERIAL2_CODE_IDX WHEN #{material2_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case MATERIAL2_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 MATERIAL2_CODE_IDX 
						,lead(MATERIAL2_CODE_IDX, 1) over (order by seq) as next
						,MATERIAL1_CODE_IDX
					from nam_material2_code noc 
					where 1=1 
					AND MATERIAL1_CODE_IDX = #{material1_code_idx}
					ORDER by seq
				)R1 WHERE MATERIAL2_CODE_IDX = #{material2_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateQtyUnitSeq" parameterType="egovframework.aviation.metadata.vo.QtyUnitVO">
   		UPDATE nam_qty_unit_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case QTY_UNIT_CODE_IDX WHEN #{qty_unit_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case QTY_UNIT_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 QTY_UNIT_CODE_IDX 
						,lag(QTY_UNIT_CODE_IDX, 1) over (order by seq) as prev
					from nam_qty_unit_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE QTY_UNIT_CODE_IDX = #{qty_unit_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case QTY_UNIT_CODE_IDX WHEN #{qty_unit_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case QTY_UNIT_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 QTY_UNIT_CODE_IDX 
						,lead(QTY_UNIT_CODE_IDX, 1) over (order by seq) as next
					from nam_qty_unit_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE QTY_UNIT_CODE_IDX = #{qty_unit_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateExistenceSeq" parameterType="egovframework.aviation.metadata.vo.ExistenceVO">
   		UPDATE nam_existence_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case EXISTENCE_CODE_IDX WHEN #{existence_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case EXISTENCE_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 EXISTENCE_CODE_IDX 
						,lag(EXISTENCE_CODE_IDX, 1) over (order by seq) as prev
					from nam_existence_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE EXISTENCE_CODE_IDX = #{existence_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case EXISTENCE_CODE_IDX WHEN #{existence_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case EXISTENCE_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 EXISTENCE_CODE_IDX 
						,lead(EXISTENCE_CODE_IDX, 1) over (order by seq) as next
					from nam_existence_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE EXISTENCE_CODE_IDX = #{existence_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
 
    <update id="updateMeasurementSeq" parameterType="egovframework.aviation.metadata.vo.MeasurementVO">
   		UPDATE nam_measurement_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case MEASUREMENT_CODE_IDX WHEN #{measurement_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case MEASUREMENT_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 MEASUREMENT_CODE_IDX 
						,lag(MEASUREMENT_CODE_IDX, 1) over (order by seq) as prev
					from nam_measurement_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE MEASUREMENT_CODE_IDX = #{measurement_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case MEASUREMENT_CODE_IDX WHEN #{measurement_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case MEASUREMENT_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 MEASUREMENT_CODE_IDX 
						,lead(MEASUREMENT_CODE_IDX, 1) over (order by seq) as next
					from nam_measurement_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE MEASUREMENT_CODE_IDX = #{measurement_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
     
    <update id="updateMeasurementUnitSeq" parameterType="egovframework.aviation.metadata.vo.MeasurementUnitVO">
   		UPDATE nam_measurement_unit_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case MEASUREMENT_UNIT_CODE_IDX WHEN #{measurement_unit_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case MEASUREMENT_UNIT_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 MEASUREMENT_UNIT_CODE_IDX 
						,lag(MEASUREMENT_UNIT_CODE_IDX, 1) over (order by seq) as prev
					from nam_measurement_unit_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE MEASUREMENT_UNIT_CODE_IDX = #{measurement_unit_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case MEASUREMENT_UNIT_CODE_IDX WHEN #{measurement_unit_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case MEASUREMENT_UNIT_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 MEASUREMENT_UNIT_CODE_IDX 
						,lead(MEASUREMENT_UNIT_CODE_IDX, 1) over (order by seq) as next
					from nam_measurement_unit_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE MEASUREMENT_UNIT_CODE_IDX = #{measurement_unit_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    <update id="updateConditionSeq" parameterType="egovframework.aviation.metadata.vo.ConditionVO">
   		UPDATE nam_condition_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case CONDITION_CODE_IDX WHEN #{condition_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case CONDITION_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 CONDITION_CODE_IDX 
						,lag(CONDITION_CODE_IDX, 1) over (order by seq) as prev
					from nam_condition_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CONDITION_CODE_IDX = #{condition_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case CONDITION_CODE_IDX WHEN #{condition_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case CONDITION_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 CONDITION_CODE_IDX 
						,lead(CONDITION_CODE_IDX, 1) over (order by seq) as next
					from nam_condition_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE CONDITION_CODE_IDX = #{condition_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateRankingSeq" parameterType="egovframework.aviation.metadata.vo.RankingVO">
   		UPDATE nam_ranking_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case RANKING_CODE_IDX WHEN #{ranking_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case RANKING_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 RANKING_CODE_IDX 
						,lag(RANKING_CODE_IDX, 1) over (order by seq) as prev
					from nam_ranking_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE RANKING_CODE_IDX = #{ranking_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case RANKING_CODE_IDX WHEN #{ranking_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case RANKING_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 RANKING_CODE_IDX 
						,lead(RANKING_CODE_IDX, 1) over (order by seq) as next
					from nam_ranking_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE RANKING_CODE_IDX = #{ranking_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateGgnuriSeq" parameterType="egovframework.aviation.metadata.vo.GgnuriVO">
   		UPDATE nam_ggnuri_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case GGNURI_CODE_IDX WHEN #{ggnuri_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case GGNURI_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 GGNURI_CODE_IDX 
						,lag(GGNURI_CODE_IDX, 1) over (order by seq) as prev
					from nam_ggnuri_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE GGNURI_CODE_IDX = #{ggnuri_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case GGNURI_CODE_IDX WHEN #{ggnuri_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case GGNURI_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 GGNURI_CODE_IDX 
						,lead(GGNURI_CODE_IDX, 1) over (order by seq) as next
					from nam_ggnuri_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE GGNURI_CODE_IDX = #{ggnuri_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
   	<update id="updateSpecialitySeq" parameterType="egovframework.aviation.preferences.vo.SpecialityVO">
   		UPDATE nam_speciality_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case SPECIALITY_CODE_IDX WHEN #{speciality_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case SPECIALITY_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 SPECIALITY_CODE_IDX 
						,lag(SPECIALITY_CODE_IDX, 1) over (order by seq) as prev
					from nam_speciality_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE SPECIALITY_CODE_IDX = #{speciality_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case SPECIALITY_CODE_IDX WHEN #{speciality_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case SPECIALITY_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 SPECIALITY_CODE_IDX 
						,lead(SPECIALITY_CODE_IDX, 1) over (order by seq) as next
					from nam_speciality_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE SPECIALITY_CODE_IDX = #{speciality_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateObtainmentSeq" parameterType="egovframework.aviation.metadata.vo.ObtainmentVO">
   		UPDATE nam_obtainment_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case OBTAINMENT_CODE_IDX WHEN #{obtainment_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case OBTAINMENT_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 OBTAINMENT_CODE_IDX 
						,lag(OBTAINMENT_CODE_IDX, 1) over (order by seq) as prev
					from nam_obtainment_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE OBTAINMENT_CODE_IDX = #{obtainment_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case OBTAINMENT_CODE_IDX WHEN #{obtainment_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case OBTAINMENT_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 OBTAINMENT_CODE_IDX 
						,lead(OBTAINMENT_CODE_IDX, 1) over (order by seq) as next
					from nam_obtainment_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE OBTAINMENT_CODE_IDX = #{obtainment_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updatePriceUnitSeq" parameterType="egovframework.aviation.metadata.vo.PriceUnitVO">
   		UPDATE nam_price_unit_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case PRICE_UNIT_CODE_IDX WHEN #{price_unit_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case PRICE_UNIT_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 PRICE_UNIT_CODE_IDX 
						,lag(PRICE_UNIT_CODE_IDX, 1) over (order by seq) as prev
					from nam_price_unit_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE PRICE_UNIT_CODE_IDX = #{price_unit_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case PRICE_UNIT_CODE_IDX WHEN #{price_unit_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case PRICE_UNIT_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 PRICE_UNIT_CODE_IDX 
						,lead(PRICE_UNIT_CODE_IDX, 1) over (order by seq) as next
					from nam_price_unit_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE PRICE_UNIT_CODE_IDX = #{price_unit_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updatePurchase1Seq" parameterType="egovframework.aviation.metadata.vo.Purchase1VO">
   		UPDATE nam_purchase1_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case PURCHASE1_CODE_IDX WHEN #{purchase1_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case PURCHASE1_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 PURCHASE1_CODE_IDX 
						,lag(PURCHASE1_CODE_IDX, 1) over (order by seq) as prev
					from nam_purchase1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE PURCHASE1_CODE_IDX = #{purchase1_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case PURCHASE1_CODE_IDX WHEN #{purchase1_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case PURCHASE1_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 PURCHASE1_CODE_IDX 
						,lead(PURCHASE1_CODE_IDX, 1) over (order by seq) as next
					from nam_purchase1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE PURCHASE1_CODE_IDX = #{purchase1_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updatePurchase2Seq" parameterType="egovframework.aviation.metadata.vo.Purchase2VO">
   		UPDATE nam_purchase2_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case PURCHASE2_CODE_IDX WHEN #{purchase2_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case PURCHASE2_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 PURCHASE2_CODE_IDX 
						,lag(PURCHASE2_CODE_IDX, 1) over (order by seq) as prev
					from nam_purchase2_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE PURCHASE2_CODE_IDX = #{purchase2_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case PURCHASE2_CODE_IDX WHEN #{purchase2_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case PURCHASE2_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 PURCHASE2_CODE_IDX 
						,lead(PURCHASE2_CODE_IDX, 1) over (order by seq) as next
					from nam_purchase2_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE PURCHASE2_CODE_IDX = #{purchase2_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateStorageType1Seq" parameterType="egovframework.aviation.preferences.vo.StorageType1VO">

   		UPDATE nam_storage_type1_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case STORAGE_TYPE1_CODE_IDX WHEN #{storage_type1_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case STORAGE_TYPE1_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 STORAGE_TYPE1_CODE_IDX 
						,lag(STORAGE_TYPE1_CODE_IDX, 1) over (order by seq) as prev
					from nam_storage_type1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE STORAGE_TYPE1_CODE_IDX = #{storage_type1_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case STORAGE_TYPE1_CODE_IDX WHEN #{storage_type1_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case STORAGE_TYPE1_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 STORAGE_TYPE1_CODE_IDX 
						,lead(STORAGE_TYPE1_CODE_IDX, 1) over (order by seq) as next
					from nam_storage_type1_code noc 
					where 1=1
					ORDER by seq
				)R1 WHERE STORAGE_TYPE1_CODE_IDX = #{storage_type1_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateStorageType2Seq" parameterType="egovframework.aviation.preferences.vo.StorageType2VO">

   		UPDATE nam_storage_type2_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case STORAGE_TYPE2_CODE_IDX WHEN #{storage_type2_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case STORAGE_TYPE2_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 STORAGE_TYPE2_CODE_IDX 
						,lag(STORAGE_TYPE2_CODE_IDX, 1) over (order by seq) as prev
						,STORAGE_TYPE1_CODE_IDX
					from nam_storage_type2_code noc 
					where 1=1
					AND STORAGE_TYPE1_CODE_IDX = #{storage_type1_code_idx}
					ORDER by seq
				)R1 WHERE STORAGE_TYPE2_CODE_IDX = #{storage_type2_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case STORAGE_TYPE2_CODE_IDX WHEN #{storage_type2_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case STORAGE_TYPE2_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 STORAGE_TYPE2_CODE_IDX 
						,lead(STORAGE_TYPE2_CODE_IDX, 1) over (order by seq) as next
						,STORAGE_TYPE1_CODE_IDX
					from nam_storage_type2_code noc 
					where 1=1 
					AND STORAGE_TYPE1_CODE_IDX = #{storage_type1_code_idx}
					ORDER by seq
				)R1 WHERE STORAGE_TYPE2_CODE_IDX = #{storage_type2_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
    
    <update id="updateStorageCodeSeq" parameterType="egovframework.aviation.preferences.vo.StorageCodeVO">

   		UPDATE nam_storage_code 
		SET
		<if test="updateType == 'up'">
			SEQ = case STORAGE_CODE_IDX WHEN #{storage_code_idx} THEN #{seq} - 1 ELSE SEQ END,
			SEQ = case STORAGE_CODE_IDX WHEN 
				(select R1.prev FROM(  		
					SELECT 
						 STORAGE_CODE_IDX 
						,lag(STORAGE_CODE_IDX, 1) over (order by seq) as prev
						,PARENT_CODE
					from nam_storage_code noc 
					where 1=1
					AND PARENT_CODE = #{parent_code}
					ORDER by seq
				)R1 WHERE STORAGE_CODE_IDX = #{storage_code_idx})
			THEN #{seq} ELSE SEQ END
		</if>
		<if test="updateType == 'down'">
			SEQ = case STORAGE_CODE_IDX WHEN #{storage_code_idx} THEN #{seq} + 1 ELSE SEQ END,
			SEQ = case STORAGE_CODE_IDX WHEN 
				(select R1.next FROM(  		
					SELECT 
						 STORAGE_CODE_IDX 
						,lead(STORAGE_CODE_IDX, 1) over (order by seq) as next
						,PARENT_CODE
					from nam_storage_code noc 
					where 1=1 
					AND PARENT_CODE = #{parent_code}
					ORDER by seq
				)R1 WHERE STORAGE_CODE_IDX = #{storage_code_idx})
			THEN #{seq} ELSE SEQ END
   		</if>
    </update>
</mapper>